Note - this is from geeksforgeeks..if element is not present we have to return only -1..but we have to return ans in vector form only..so take vector only



//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
  
    int firstOcc(vector<int> &arr, int n, int x){
        int start=0;
        int end=n-1;
        int res=-1;
        while(start<=end){
            int mid=start + (end-start)/2;
            if(arr[mid]==x){
                res=mid;
                end=mid-1;
            }
            else if(x<arr[mid]){
                end=mid-1;
            }
            else
            start=mid+1;
        }
        return res;
    }
    
    int lastOcc(vector<int> &arr, int n, int x){
        
        int start=0;
        int end=n-1;
        int res=-1;
        while(start<=end){
            int mid=start + (end-start)/2;
            if(arr[mid]==x){
                res=mid;
                start=mid+1;
            }
            else if(x<arr[mid]){
                end=mid-1;
            }
            else
            start=mid+1;
        }
        return res;
    
        
        
    }
    vector<int> firstAndLast(vector<int> &arr, int n, int x) {
        // Code here
        vector<int>ans;
       int a= firstOcc(arr,n,x);
       int b= lastOcc(arr,n,x);
       
       if(a==-1 && b==-1)
       ans.push_back(a);
       
       else{
           ans.push_back(a);
           ans.push_back(b);
       }
       
       
       return ans;
       
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, x;
        cin >> n >> x;
        vector<int> arr(n);
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }

        Solution obj;
        vector<int> ans= obj.firstAndLast(arr, n, x) ;
        for(int i:ans){
            cout<<i<<" ";
        }
        cout<< endl;
    }
    return 0;
}

// } Driver Code Ends
