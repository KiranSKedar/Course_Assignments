https://leetcode.com/problems/remove-nth-node-from-end-of-list/


https://www.youtube.com/watch?v=MzhI-u2h0-w&list=PLzjZaW71kMwQ1DIWTn0d_KDHU4_E52-rq&index=23


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* slow=head;
        ListNode* fast=head;
        
        while(n--){
            fast=fast->next;
        }
        
        if(fast==NULL)
            return slow->next;
        
        while(fast->next!=NULL){
            slow=slow->next;
            fast=fast->next;
        }
        
        slow->next=slow->next->next;
        
        
        return head;
        
    }
};


approach 2
count toatl nodes
total-n-1 is the desired node

if total==n
return head->next
